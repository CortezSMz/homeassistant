
# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

sensor:
  - platform: command_line
    name: RPi CPU Temperature
    unique_id: rpi_cpu_temperature
    command: 'cat /sys/class/thermal/thermal_zone0/temp'
    unit_of_measurement: 'Â°C'
    value_template: '{{ value | multiply(0.001) | round(1) }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU0 Usage
    unique_id: rpi_cpu0_usage
    command: 'echo 1 | top -n1 | grep -E "^CPU0" | awk ''{print $2+$4}'''
    unit_of_measurement: '%'
    value_template: '{{ value | int | default(0) }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU1 Usage
    unique_id: rpi_cpu1_usage
    command: 'echo 1 | top -n1 | grep -E "^CPU1" | awk ''{print $2+$4}'''
    unit_of_measurement: '%'
    value_template: '{{ value | int | default(0) }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU2 Usage
    unique_id: rpi_cpu2_usage
    command: 'echo 1 | top -n1 | grep -E "^CPU2" | awk ''{print $2+$4}'''
    unit_of_measurement: '%'
    value_template: '{{ value | int | default(0) }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU3 Usage
    unique_id: rpi_cpu3_usage
    command: 'echo 1 | top -n1 | grep -E "^CPU3" | awk ''{print $2+$4}'''
    unit_of_measurement: '%'
    value_template: '{{ value | int | default(0) }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU Clock Frequency (Min)
    unique_id: rpi_cpu_clock_frequency_min
    command: 'cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq'
    unit_of_measurement: 'MHz'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU Clock Frequency (Max)
    unique_id: rpi_cpu_clock_frequency_max
    command: 'cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq'
    unit_of_measurement: 'MHz'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi CPU Clock Frequency (Current)
    unique_id: rpi_cpu_clock_frequency_current
    command: 'cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq'
    unit_of_measurement: 'MHz'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Memory Total
    unique_id: rpi_memory_total
    command: 'free -m | awk ''/^Mem:/ {print $2}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Memory Used
    unique_id: rpi_memory_used
    command: 'free -m | awk ''/^Mem:/ {print $3}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Memory Available
    unique_id: rpi_memory_available
    command: 'free -m | awk ''/^Mem:/ {print $7}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Memory Used %
    unique_id: rpi_memory_used_percentage
    command: 'free | awk ''/^Mem:/ {printf "%.1f", ($3/$2) * 100}'''
    unit_of_measurement: '%'
    value_template: '{{ value }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Disk Total
    unique_id: rpi_disk_total
    command: 'df -BM | awk ''/^\/dev\// {total = $2; used = $3; available = $4} END {print total}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Disk Used
    unique_id: rpi_disk_used
    command: 'df -BM | awk ''/^\/dev\// {total = $2; used = $3; available = $4} END {print used}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Disk Available
    unique_id: rpi_disk_available
    command: 'df -BM | awk ''/^\/dev\// {total = $2; used = $3; available = $4} END {print available}'''
    unit_of_measurement: 'MB'
    value_template: '{{ value | int }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Disk Used %
    unique_id: rpi_disk_used_percentage
    command: 'df -BM | awk ''/^\/dev\// {total = $2; used = $3; available = $4} END {printf "%.1f", (used / (total + used)) * 100}'''
    unit_of_measurement: '%'
    value_template: '{{ value | float }}'
    scan_interval: 5
  - platform: command_line
    name: RPi Uptime
    unique_id: rpi_uptime
    command: 'uptime | awk -F "up|\," ''{print $2}'''
    value_template: '{{ value }}'
    scan_interval: 5
  - platform: command_line
    name: RPi System Load Average (1min)
    unique_id: rpi_system_load_average_1min
    command: 'cat /proc/loadavg | awk ''{print $1}'''
    unit_of_measurement: '%'
    value_template: '{{ value }}'
    scan_interval: 5
  - platform: command_line
    name: RPi System Load Average (5mins)
    unique_id: rpi_system_load_average_5min
    command: 'cat /proc/loadavg | awk ''{print $2}'''
    unit_of_measurement: '%'
    value_template: '{{ value }}'
    scan_interval: 5
  - platform: command_line
    name: RPi System Load Average (15mins)
    unique_id: rpi_system_load_average_15min
    command: 'cat /proc/loadavg | awk ''{print $3}'''
    unit_of_measurement: '%'
    value_template: '{{ value }}'
    scan_interval: 5

switch:
  - platform: remote_rpi_gpio
    host: pi
    ports:
      17: RPi Fan

panel_iframe:
  portainer:
    title: Portainer
    url: "http://portainer.pi:8999/#!/2/docker/containers"
    icon: mdi:docker
    require_admin: true
  nodered:
    title: Node-RED
    url: "http://nodered.pi:1880"
    icon: mdi:lan
    require_admin: true

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
  ip_ban_enabled: true
  login_attempts_threshold: 3

alexa:
  smart_home:
    locale: en-US
    endpoint: https://api.amazonalexa.com/v3/events

